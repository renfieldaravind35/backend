{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "@REM ----------------------------------------------------------------------------\n",
        "@REM Licensed to the Apache Software Foundation (ASF) under one\n",
        "@REM or more contributor license agreements.  See the NOTICE file\n",
        "@REM distributed with this work for additional information\n",
        "@REM regarding copyright ownership.  The ASF licenses this file\n",
        "@REM to you under the Apache License, Version 2.0 (the\n",
        "@REM \"License\"); you may not use this file except in compliance\n",
        "@REM with the License.  You may obtain a copy of the License at\n",
        "@REM\n",
        "@REM    https://www.apache.org/licenses/LICENSE-2.0\n",
        "@REM\n",
        "@REM Unless required by applicable law or agreed to in writing,\n",
        "@REM software distributed under the License is distributed on an\n",
        "@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n",
        "@REM KIND, either express or implied.  See the License for the\n",
        "@REM specific language governing permissions and limitations\n",
        "@REM under the License.\n",
        "@REM ----------------------------------------------------------------------------\n",
        "\n",
        "@REM ----------------------------------------------------------------------------\n",
        "@REM Maven Start Up Batch script\n",
        "@REM\n",
        "@REM Required ENV vars:\n",
        "@REM JAVA_HOME - location of a JDK home dir\n",
        "@REM\n",
        "@REM Optional ENV vars\n",
        "@REM M2_HOME - location of maven2's installed home dir\n",
        "@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n",
        "@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n",
        "@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n",
        "@REM     e.g. to debug Maven itself, use\n",
        "@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n",
        "@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n",
        "@REM ----------------------------------------------------------------------------\n",
        "\n",
        "@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n",
        "@echo off\n",
        "@REM set title of command window\n",
        "title %0\n",
        "@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n",
        "@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n",
        "\n",
        "@REM set %HOME% to equivalent of $HOME\n",
        "if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n",
        "\n",
        "@REM Execute a user defined script before this one\n",
        "if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n",
        "@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n",
        "if exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\n",
        "if exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n",
        ":skipRcPre\n",
        "\n",
        "@setlocal\n",
        "\n",
        "set ERROR_CODE=0\n",
        "\n",
        "@REM To isolate internal variables from possible post scripts, we use another setlocal\n",
        "@setlocal\n",
        "\n",
        "@REM ==== START VALIDATION ====\n",
        "if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n",
        "\n",
        "echo.\n",
        "echo Error: JAVA_HOME not found in your environment. >&2\n",
        "echo Please set the JAVA_HOME variable in your environment to match the >&2\n",
        "echo location of your Java installation. >&2\n",
        "echo.\n",
        "goto error\n",
        "\n",
        ":OkJHome\n",
        "if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n",
        "\n",
        "echo.\n",
        "echo Error: JAVA_HOME is set to an invalid directory. >&2\n",
        "echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n",
        "echo Please set the JAVA_HOME variable in your environment to match the >&2\n",
        "echo location of your Java installation. >&2\n",
        "echo.\n",
        "goto error\n",
        "\n",
        "@REM ==== END VALIDATION ====\n",
        "\n",
        ":init\n",
        "\n",
        "@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n",
        "@REM Fallback to current working directory if not found.\n",
        "\n",
        "set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n",
        "IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n",
        "\n",
        "set EXEC_DIR=%CD%\n",
        "set WDIR=%EXEC_DIR%\n",
        ":findBaseDir\n",
        "IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n",
        "cd ..\n",
        "IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n",
        "set WDIR=%CD%\n",
        "goto findBaseDir\n",
        "\n",
        ":baseDirFound\n",
        "set MAVEN_PROJECTBASEDIR=%WDIR%\n",
        "cd \"%EXEC_DIR%\"\n",
        "goto endDetectBaseDir\n",
        "\n",
        ":baseDirNotFound\n",
        "set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n",
        "cd \"%EXEC_DIR%\"\n",
        "\n",
        ":endDetectBaseDir\n",
        "\n",
        "IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n",
        "\n",
        "@setlocal EnableExtensions EnableDelayedExpansion\n",
        "for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n",
        "@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n",
        "\n",
        ":endReadAdditionalConfig\n",
        "\n",
        "SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n",
        "set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n",
        "set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n",
        "\n",
        "set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n",
        "\n",
        "FOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n",
        "    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n",
        ")\n",
        "\n",
        "@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n",
        "@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n",
        "if exist %WRAPPER_JAR% (\n",
        "    if \"%MVNW_VERBOSE%\" == \"true\" (\n",
        "        echo Found %WRAPPER_JAR%\n",
        "    )\n",
        ") else (\n",
        "    if not \"%MVNW_REPOURL%\" == \"\" (\n",
        "        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n",
        "    )\n",
        "    if \"%MVNW_VERBOSE%\" == \"true\" (\n",
        "        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n",
        "        echo Downloading from: %DOWNLOAD_URL%\n",
        "    )\n",
        "\n",
        "    powershell -Command \"&{\"^\n",
        "\t\t\"$webclient = new-object System.Net.WebClient;\"^\n",
        "\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n",
        "\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n",
        "\t\t\"}\"^\n",
        "\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n",
        "\t\t\"}\"\n",
        "    if \"%MVNW_VERBOSE%\" == \"true\" (\n",
        "        echo Finished downloading %WRAPPER_JAR%\n",
        "    )\n",
        ")\n",
        "@REM End of extension\n",
        "\n",
        "@REM Provide a \"standardized\" way to retrieve the CLI args that will\n",
        "@REM work with both Windows and non-Windows executions.\n",
        "set MAVEN_CMD_LINE_ARGS=%*\n",
        "\n",
        "%MAVEN_JAVA_EXE% ^\n",
        "  %JVM_CONFIG_MAVEN_PROPS% ^\n",
        "  %MAVEN_OPTS% ^\n",
        "  %MAVEN_DEBUG_OPTS% ^\n",
        "  -classpath %WRAPPER_JAR% ^\n",
        "  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n",
        "  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n",
        "if ERRORLEVEL 1 goto error\n",
        "goto end\n",
        "\n",
        ":error\n",
        "set ERROR_CODE=1\n",
        "\n",
        ":end\n",
        "@endlocal & set ERROR_CODE=%ERROR_CODE%\n",
        "\n",
        "if not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n",
        "@REM check for post script, once with legacy .bat ending and once with .cmd ending\n",
        "if exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\n",
        "if exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n",
        ":skipRcPost\n",
        "\n",
        "@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n",
        "if \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n",
        "\n",
        "if \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n",
        "\n",
        "cmd /C exit /B %ERROR_CODE%"
      ],
      "metadata": {
        "id": "5hbOm4gAJL1j"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}